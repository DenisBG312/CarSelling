@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.Web.PagedList
@model X.PagedList.IPagedList<Brand>

@{
    ViewData["Title"] = "Производители";
}

<script src="js/imgOpen.js"></script>
<link rel="stylesheet" href="~/css/BrandIndex.css" />
<link rel="stylesheet" href="~/css/pagination.css"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<h1>Всички производители</h1>

<p>
    <a asp-action="Add" class="btn btn-danger">
        <i class="fa-solid fa-circle-plus"></i>

          Добави Нов Производител</a>
</p>

<table class="table">
    <thead>
    <tr>
        <th>Име</th>
        <th>Описание</th>
        <th>Снимка</th>
        <th>Действия</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var brand in Model)
    {
        <tr>
            <td>@brand.Name</td>
            <td>
                @if (!string.IsNullOrEmpty(brand.Description))
                {
                    @brand.Description
                }
                else
                {
                    <span>No Description</span>
                }
            </td>
            <td>
                @if (!string.IsNullOrEmpty(brand.ImgUrl))
                {
                    <img src="@brand.ImgUrl" alt="@brand.Name" class="brand-image" />
                }
                else
                {
                    <span>No Image</span>
                }
            </td>
            <td>
                <a href="@Url.Action("Edit", "Brand", new { id = brand.Id })" class="btn btn-primary"><i class="fa-solid fa-pen-to-square"></i>
                      Редактирай</a>
                <a href="@Url.Action("Delete", "Brand", new { id = brand.Id })" class="btn btn-danger"><i class="fa-solid fa-trash"></i>
                      Изтрий</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" }, 
        LiElementClasses = new[] { "page-item" },  
        PageClasses = new[] { "page-link" },       
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
    })
</nav>